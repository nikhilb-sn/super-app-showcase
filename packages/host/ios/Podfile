require_relative '../node_modules/super-app-showcase-sdk/ios/react_native_setup.rb'

platform :ios, min_ios_version_supported
prepare_react_native_project!

flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# Define common pods and configurations for both targets
def common_pods
  # Apply modular headers to specific Firebase pods
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'FirebaseCrashlytics', :modular_headers => true
  pod 'FirebaseSessions', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'nanopb', :modular_headers => true
end

# Host target configuration
target 'host' do
  config = use_native_modules!

  # Common pods for host
  common_pods

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'hostTests' do
    inherit! :complete
    # Pods for testing
  end
end

# HostUAT target configuration
# target 'hostUAT' do
#   config = use_native_modules!

#   # Common pods for hostUAT
#   common_pods

#   # Flags change depending on the env values.
#   flags = get_default_flags()

#   use_react_native!(
#     :path => config[:reactNativePath],
#     :hermes_enabled => flags[:hermes_enabled],
#     :fabric_enabled => flags[:fabric_enabled],
#     :flipper_configuration => flipper_config,
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )

# end

# Combine post_install hooks
post_install do |installer|
  react_native_post_install(
    installer,
    :mac_catalyst_enabled => false
  )
  __apply_Xcode_12_5_M1_post_install_workaround(installer)
end
